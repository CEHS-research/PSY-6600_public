data = .)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(comment     = NA,
cache       = TRUE,
echo        = TRUE,
warning     = FALSE,
message     = FALSE,
fig.align   = "center",   # center all figures
fig.width   = 6.5,        # set default figure width to 4 inches
fig.height  = 4.5)        # set default figure height to 3 inches
df %>%
ggplot(aes(x, y)) +
geom_segment(aes(xend = x, yend = pred, color = y - pred, alpha = abs(y - pred))) +
geom_point() +
geom_smooth(method = "lm",
color = "dodgerblue4",
se = FALSE,
size = 2,
alpha = .8) +
theme_bw() +
scale_color_gradient2(low = "chartreuse3",
mid = "grey90",
high = "dodgerblue3") +
labs(color = "Size and\nDirection of\nResidual",
alpha = "Size and\nDirection of\nResidual") +
theme(legend.position = "none")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(comment     = NA,
cache       = TRUE,
echo        = TRUE,
warning     = FALSE,
message     = FALSE,
fig.align   = "center",   # center all figures
fig.width   = 6.5,        # set default figure width to 4 inches
fig.height  = 4.5)        # set default figure height to 3 inches
set.seed(843)
library(tidyverse)
df <- tibble::data_frame(
x = rnorm(100),
y = x + rnorm(100)
) %>%
mutate(pred = predict(lm(y ~ x, data = .)))
df %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(method = "lm",
color = "dodgerblue4",
se = FALSE) +
theme_bw()
df %>%
ggplot(aes(x, y)) +
geom_segment(aes(xend = x, yend = pred, color = y - pred, alpha = abs(y - pred))) +
geom_point() +
geom_smooth(method = "lm",
color = "dodgerblue4",
se = FALSE,
size = 2,
alpha = .8) +
theme_bw() +
scale_color_gradient2(low = "chartreuse3",
mid = "grey90",
high = "dodgerblue3") +
labs(color = "Size and\nDirection of\nResidual",
alpha = "Size and\nDirection of\nResidual") +
theme(legend.position = "none")
p_0 <- df %>%
ggplot(aes(x, y)) +
geom_point() +
theme_bw() +
scale_color_gradient2(low = "chartreuse3",
mid = "grey90",
high = "dodgerblue3") +
theme(legend.position = "none") +
coord_cartesian(ylim = c(11.9, 17.2),
xlim = c(2.5, 7.1)) +
labs(x = "X, the Independent Variable",
y = "Y, the Dependent Variable")
p_0
set.seed(843)
library(tidyverse)
df <- tibble::data_frame(
x = rnorm(10) + 5,
y = x + rnorm(10) + 10
) %>%
mutate(pred = predict(lm(y ~ x, data = .)))
p_0 <- df %>%
ggplot(aes(x, y)) +
geom_point() +
theme_bw() +
scale_color_gradient2(low = "chartreuse3",
mid = "grey90",
high = "dodgerblue3") +
theme(legend.position = "none") +
coord_cartesian(ylim = c(11.9, 17.2),
xlim = c(2.5, 7.1)) +
labs(x = "X, the Independent Variable",
y = "Y, the Dependent Variable")
p_0
p_0 <- df %>%
ggplot(aes(x, y)) +
geom_point(size = 2) +
theme_bw() +
scale_color_gradient2(low = "chartreuse3",
mid = "grey90",
high = "dodgerblue3") +
theme(legend.position = "none") +
coord_cartesian(ylim = c(11.9, 17.2),
xlim = c(2.5, 7.1)) +
labs(x = "X, the Independent Variable",
y = "Y, the Dependent Variable")
p_0
p_0 <- df %>%
ggplot(aes(x, y)) +
geom_point(size = 3) +
theme_bw() +
scale_color_gradient2(low = "chartreuse3",
mid = "grey90",
high = "dodgerblue3") +
theme(legend.position = "none") +
coord_cartesian(ylim = c(11.9, 17.2),
xlim = c(2.5, 7.1)) +
labs(x = "X, the Independent Variable",
y = "Y, the Dependent Variable")
p_0
p_1 <- p_0 +
geom_vline(aes(xintercept = mean(x)),
color = "darkorchid4",
linetype = 2) +
geom_hline(aes(yintercept = mean(y)),
color = "darkorchid3",
linetype = 2)
p_1
p_2 <- p_1 +
geom_smooth(method = "lm",
color = "coral2",
se = FALSE,
size = 1,
alpha = .8)
p_2
p_2 +
geom_segment(aes(xend = x, yend = mean(y)),
color = "chartreuse3")
p_2 +
geom_segment(aes(xend = x, yend = pred, y = mean(y)),
color = "dodgerblue3")
p_2 +
geom_segment(aes(xend = x, yend = pred),
color = "firebrick3")
set.seed(843)
library(tidyverse)
df <- tibble::data_frame(
x = rnorm(10) + 5,
y = x + rnorm(10) + 10
) %>%
mutate(pred = predict(lm(y ~ x, data = .)))
p_0 <- df %>%
ggplot(aes(x, y)) +
geom_point(size = 3) +
theme_bw() +
scale_color_gradient2(low = "chartreuse3",
mid = "grey90",
high = "dodgerblue3") +
theme(legend.position = "none") +
coord_cartesian(ylim = c(11.9, 17.2),
xlim = c(2.5, 7.1)) +
labs(x = "X, the Independent Variable",
y = "Y, the Dependent Variable")
p_0
p_1 <- p_0 +
geom_vline(aes(xintercept = mean(x)),
color = "darkorchid4",
linetype = 2) +
geom_hline(aes(yintercept = mean(y)),
color = "darkorchid3",
linetype = 2)
p_1
p_1 <- p_0 +
geom_vline(aes(xintercept = mean(x)),
color = "darkorchid4",
linetype = 2) +
geom_hline(aes(yintercept = mean(y)),
color = "darkorchid3",
linetype = 2) +
geom_text(label = "mean of Y",
x = 2.75,
y = 14.5)
p_1
p_1 <- p_0 +
geom_vline(aes(xintercept = mean(x)),
color = "darkorchid4",
linetype = 2) +
geom_hline(aes(yintercept = mean(y)),
color = "darkorchid3",
linetype = 2) +
geom_text(label = "$\hat{Y}$",
p_1 <- p_0 +
geom_vline(aes(xintercept = mean(x)),
color = "darkorchid4",
linetype = 2) +
geom_hline(aes(yintercept = mean(y)),
color = "darkorchid3",
linetype = 2) +
geom_text(label = "mean of Y$",
x = 2.75,
y = 14.5)+
geom_text(label = "mean of X$",
x = 4.25,
y = 12)
p_1
p_1 <- p_0 +
geom_vline(aes(xintercept = mean(x)),
color = "darkorchid4",
linetype = 2) +
geom_hline(aes(yintercept = mean(y)),
color = "darkorchid3",
linetype = 2) +
geom_text(label = "mean of Y",
x = 2.75,
y = 14.5)+
geom_text(label = "mean of X",
x = 4.5,
y = 12)
p_1
p_2 <- p_1 +
geom_smooth(method = "lm",
color = "coral2",
se = FALSE,
size = 1,
alpha = .8) +
geom_text(label = "Predicted Y\n based on X",
x = 6,
y = 15.5)
p_2
p_2 <- p_1 +
geom_smooth(method = "lm",
color = "coral2",
se = FALSE,
size = 1,
alpha = .8) +
geom_text(label = "Predicted Y\n based on X",
color = "coral2"
x = 6,
p_1 <- p_0 +
geom_vline(aes(xintercept = mean(x)),
color = "darkorchid4",
linetype = 2) +
geom_hline(aes(yintercept = mean(y)),
color = "darkorchid3",
linetype = 2) +
geom_text(label = "mean of Y",
color = "darkorchid4",
x = 2.75,
y = 14.5)+
geom_text(label = "mean of X",
color = "darkorchid4",
x = 4.5,
y = 12)
p_1
p_2 <- p_1 +
geom_smooth(method = "lm",
color = "coral2",
se = FALSE,
size = 1,
alpha = .8) +
geom_text(label = "Predicted Y\n based on X",
color = "coral2",
x = 6,
y = 15.5)
p_2
p_2 +
geom_segment(aes(xend = x, yend = mean(y)),
color = "chartreuse3") +
geom_text(label = "(Y - \bar{Y})",
color = "chartreuse3",
x = 6.5,
y = 15.5)
p_2 +
geom_segment(aes(xend = x, yend = mean(y)),
color = "chartreuse3") +
geom_text(label = "Deviation of\nY from\nmean of Y",
color = "chartreuse3",
x = 6.5,
y = 15.5)
p_2 <- p_1 +
geom_smooth(method = "lm",
color = "coral2",
se = FALSE,
size = 1,
alpha = .8) +
geom_text(label = "Predicted Y\n based on X",
color = "coral2",
x = 6,
y = 16.5)
p_2
p_2 <- p_1 +
geom_smooth(method = "lm",
color = "coral2",
se = FALSE,
size = 1,
alpha = .8) +
geom_text(label = "Predicted Y\n based on X",
color = "coral2",
x = 6,
y = 17)
p_2
p_2 <- p_1 +
geom_smooth(method = "lm",
color = "coral2",
se = FALSE,
size = 1,
alpha = .8) +
geom_text(label = "Predicted Y\n based on X",
color = "coral2",
x = 6,
y = 17)
p_2
p_2 +
geom_segment(aes(xend = x, yend = mean(y)),
color = "chartreuse3") +
geom_text(label = "Deviation of\nY from\nmean of Y",
color = "chartreuse3",
x = 6.5,
y = 15.5)
p_2 +
geom_segment(aes(xend = x, yend = mean(y)),
color = "chartreuse3") +
geom_text(label = "Deviations of\nY's from\nthe mean of Y",
color = "chartreuse3",
x = 6.5,
y = 15.5)
p_2 +
geom_segment(aes(xend = x, yend = mean(y)),
color = "chartreuse3") +
geom_text(label = "Deviations of\nObserved Y's from\nthe mean of Y",
color = "chartreuse3",
x = 6.5,
y = 15.5)
p_2 +
geom_segment(aes(xend = x, yend = mean(y)),
color = "chartreuse3") +
geom_text(label = "Deviations of\nobserved Y's\nfrom the mean of Y",
color = "chartreuse3",
x = 6.5,
y = 15.5)
p_2 +
geom_segment(aes(xend = x, yend = mean(y)),
color = "chartreuse3") +
geom_text(label = "Deviations of\nobserved Y's\nfrom the mean of Y",
color = "chartreuse3",
x = 6.5,
y = 15.5)
p_2 +
geom_segment(aes(xend = x, yend = pred, y = mean(y)),
color = "dodgerblue3") +
geom_text(label = "Deviations of\npredicted Y's\nfrom the mean of Y",
color = "dodgerblue3",
x = 6.5,
y = 15.5)
p_2 +
geom_segment(aes(xend = x, yend = pred),
color = "firebrick3") +
geom_text(label = "Deviations of\nobserved Y's\nfrom the predicted Ys",
color = "firebrick3",
x = 6.5,
y = 15.5)
library(tidyverse)    # Loads several very helpful 'tidy' packages
library(readxl)       # Read in Excel datasets
library(furniture)    # Nice tables (by our own Tyson Barrett)
schizo <- data.frame(id       = c(1:10),
yr_hos   = c( 5,  7, 12,  5, 11,  3,  7,  2,  9,  6),
ori_test = c(22, 26, 16, 20, 18, 30, 14, 24, 15, 19))
GRE <- data.frame(id          = c(1:5),
verbalGRE_1 = c(540, 510, 580, 550, 520),
verbalGRE_2 = c(570, 520, 600, 530, 520))
test_scores <-  data.frame(id      = c(1:12),
spatial = c(13, 32, 41, 26, 28, 12, 19, 33, 24, 46, 22, 17),
math    = c(19, 25, 31, 18, 37, 16, 14, 28, 20, 39, 21, 15))
child_vars  <-  data.frame(child = c(1:8),
shoe  = c(5.2, 4.7, 7.0, 5.8, 7.2, 6.9, 7.7, 8.0),
read  = c(1.7, 1.5, 2.7, 3.1, 3.9, 4.5, 5.1, 7.4),
age   = c(  5,   6,   7,   8,   9,  10,  11,  12))
memory <- data.frame(id    = c(1:9),
sound = c(8, 5, 6, 10, 3, 4, 7, 11, 9),
look  = c(4, 5, 3, 11, 2, 6, 4,  6, 7))
GRE
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_pattern = "verbalGRE_",
values = "verbalGRE")
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_pattern = "verbalGRE_",
values_to = "verbalGRE")
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_pattern = "verbalGRE_",
values_to = "verbalGRE")
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_prefix = "verbalGRE_",
values_to = "verbalGRE")
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_prefix = "verbalGRE_",
values_to = "score")
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_prefix = "verbalGRE_",
values_to = "GRE_verbal")
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_prefix = "verbalGRE_",
values_to = "verbalGRE")
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_prefix = "verbalGRE_",
values_to = "verbalGRE") %>%
t.test(verbalGRE ~ time,
data = .,
paired = TRUE)
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_prefix = "verbalGRE_",
values_to = "verbalGRE") %>%
t.test(verbalGRE ~ time,
data = .)
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_prefix = "verbalGRE_",
values_to = "verbalGRE") %>%
t.test(verbalGRE ~ time,
data = .,
var.equal = TRUE)
# Paired t-test: verbalGRE1 & verbalGRE2
GRE %>%
tidyr::pivot_longer(cols = c(verbalGRE_1, verbalGRE_2),
names_to = "time",
names_prefix = "verbalGRE_",
values_to = "verbalGRE") %>%
t.test(verbalGRE ~ time,
data = .,
paired = TRUE)
# Compute a new variable --> save as: child_new
GRE %>%
dplyr::mutate(verbalGRE_1 - verbalGRE_2)
# Compute a new variable --> save as: GRE_new
GRE_new <- GRE %>%
dplyr::mutate(verbalGRE_1 - verbalGRE_2)
# Compute a new variable --> save as: GRE_new
GRE_new <- GRE %>%
dplyr::mutate(verbalGRE_diff = verbalGRE_1 - verbalGRE_2)
GRE_new
# 1-sample t test: pop mean of verbalGRE_diff = 0 (no difference)
GRE_new %>%
dplyr::pull(verbalGRE_diff) %>%
t.test(mu = 0)
?dplyr::Gather
?dplyr::gather
?tidyr::gather
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(comment     = ">",
echo        = TRUE)
library(tidyverse)
library(kableExtra)
data.frame("R"        = c("![]figures/Rlogo_200.png){width=100px}",
"Programing Language",
"Install and Ignore",
"Engine",
"![](figures/car_engine.jpg){width=500px}"),
"R Studio" = c("![](figures/rstudiosticker.png){width=200px}",
"Interface Program",
"Interact with Constantly",
"Dashboard",
"![](figures/car_dashboard.jpg){width=500px}")) %>%
kableExtra::kable(col.names = c("R", "R Studio"),
align = "c")
setwd("~/GitHub/PSY-6600_public/slides")
data.frame("R"        = c("![]figures/Rlogo_200.png){width=100px}",
"Programing Language",
"Install and Ignore",
"Engine",
"![](figures/car_engine.jpg){width=500px}"),
"R Studio" = c("![](figures/rstudiosticker.png){width=200px}",
"Interface Program",
"Interact with Constantly",
"Dashboard",
"![](figures/car_dashboard.jpg){width=500px}")) %>%
kableExtra::kable(col.names = c("R", "R Studio"),
align = "c")
?mean
install.packages(c("afex", "apaTables", "backports", "bayestestR", "BH", "blme", "blogdown", "bookdown", "broom", "callr", "caTools", "cli", "clubSandwich", "coin", "colorspace", "cowplot", "cpp11", "crosstalk", "cubelyr", "data.table", "DBI", "dbplyr", "DescTools", "diffobj", "dplyr", "DT", "e1071", "effectsize", "emmeans", "expm", "fansi", "fdrtool", "fields", "fitdistrplus", "flextable", "foreach", "foreign", "Formula", "freetypeharfbuzz", "gdtools", "geepack", "generics", "GGally", "ggeffects", "ggplot2", "ggraph", "ggrepel", "ggridges", "ggthemes", "gh", "git2r", "gplots", "graphlayouts", "hexbin", "HLMdiag", "Hmisc", "hms", "htmltools", "htmlwidgets", "httpuv", "igraph", "insight", "isoband", "iterators", "janitor", "jsonlite", "jtools", "kableExtra", "labeling", "libcoin", "lme4", "lmerTest", "lubridate", "margins", "mice", "miceadds", "moonBook", "multcomp", "officer", "openxlsx", "parameters", "patchwork", "pbkrtest", "performance", "pillar", "pkgbuild", "plotly", "plotrix", "processR", "processx", "ps", "psych", "quantreg", "R6", "rcompanion", "Rcpp", "RcppArmadillo", "RcppEigen", "reghelper", "rgl", "rlang", "rmarkdown", "RNifti", "robustbase", "rprojroot", "rstudioapi", "rticles", "scdhlm", "see", "semTools", "servr", "shinyWidgets", "sjmisc", "sjPlot", "sjstats", "sp", "spam", "StanHeaders", "statmod", "testthat", "tibble", "tinytex", "usethis", "vctrs", "vdiffr", "VGAM", "VIM", "withr", "xaringan", "xfun"))
install.packages(c("afex", "apaTables", "backports", "bayestestR", "BH", "blme", "blogdown", "bookdown", "broom", "callr", "caTools", "cli", "clubSandwich", "coin", "colorspace", "cowplot", "cpp11", "crosstalk", "cubelyr", "data.table", "DBI", "dbplyr", "DescTools", "diffobj", "dplyr", "DT", "e1071", "effectsize", "emmeans", "expm", "fansi", "fdrtool", "fields", "fitdistrplus", "flextable", "foreach", "foreign", "Formula", "freetypeharfbuzz", "gdtools", "geepack", "generics", "GGally", "ggeffects", "ggplot2", "ggraph", "ggrepel", "ggridges", "ggthemes", "gh", "git2r", "gplots", "graphlayouts", "hexbin", "HLMdiag", "Hmisc", "hms", "htmltools", "htmlwidgets", "httpuv", "igraph", "insight", "isoband", "iterators", "janitor", "jsonlite", "jtools", "kableExtra", "labeling", "libcoin", "lme4", "lmerTest", "lubridate", "margins", "mice", "miceadds", "moonBook", "multcomp", "officer", "openxlsx", "parameters", "patchwork", "pbkrtest", "performance", "pillar", "pkgbuild", "plotly", "plotrix", "processR", "processx", "ps", "psych", "quantreg", "R6", "rcompanion", "Rcpp", "RcppArmadillo", "RcppEigen", "reghelper", "rgl", "rlang", "rmarkdown", "RNifti", "robustbase", "rprojroot", "rstudioapi", "rticles", "scdhlm", "see", "semTools", "servr", "shinyWidgets", "sjmisc", "sjPlot", "sjstats", "sp", "spam", "StanHeaders", "statmod", "testthat", "tibble", "tinytex", "usethis", "vctrs", "vdiffr", "VGAM", "VIM", "withr", "xaringan", "xfun"))
