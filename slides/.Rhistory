dplyr::group_by(time) %>%
dplyr::summarise(M_totalc = mean(totalc,
na.rm = TRUE)),
aes(xintercept = M_totalc,
color = "Mean"),
size = 2) +
theme_bw() +
labs(x = "Total Oral Condition",
color = NULL) +
scale_color_manual(values = c("blue", "red")) +
theme(legend.position = c(1, 1),
legend.justification = c(1.1, 1.1),
legend.background = element_rect(color = "black"))
cancer_long %>%
ggplot(aes(x = time,
y = totalc)) +
geom_boxplot(fill = "gray") +
stat_summary(fun = mean,
geom = "point",
color = "red",
size = 5,
shape = 18) +
theme_bw() +
labs(x = NULL,
y = "Total Oral Condition")
cancer_long %>%
ggplot(aes(x = time,
y = totalc)) +
geom_violin(fill = "gray") +
geom_point() +
geom_line(aes(group = id)) +
stat_summary(fun = mean,
geom = "point",
color = "red",
size = 5,
shape = 18) +
stat_summary(aes(group = 1),
fun = mean,
geom = "line",
color = "red",
size = 1,
shape = 18) +
theme_bw() +
labs(x = NULL,
y = "Total Oral Condition")
cancer_new %>%
ggplot(aes(x = totalcin,
y = totalcw6)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Total Oral Condition at Intake",
y = "Total Oral Condition at Six Weeks")
cancer_new %>%
ggplot(aes(totalc_diff)) +
geom_histogram(aes(y=..density..),
binwidth = 1,
alpha = .8) +
geom_density(aes(color = "Density")) +
geom_vline(xintercept = 0,
linetype = "dashed") +
geom_vline(data = cancer_long %>%
dplyr::summarise(M_totalc_diff = mean(totalc_diff,
na.rm = TRUE)),
aes(xintercept = M_totalc_diff,
color = "Mean"),
size = 2) +
theme_bw() +
labs(x = "Total Oral Condition",
color = NULL) +
scale_color_manual(values = c("blue", "red"))  +
theme(legend.position = c(1, 1),
legend.justification = c(1.1, 1.1),
legend.background = element_rect(color = "black"))
cancer_new %>%
ggplot(aes(x = "test",
y = totalc_diff)) +
geom_boxplot(fill = "gray") +
stat_summary(fun = mean,
geom = "point",
color = "red",
size = 5,
shape = 18) +
theme_bw() +
labs(x = NULL,
y = "Change in Total Oral Condition")  +
geom_hline(yintercept = 0,
linetype = "dashed")
cancer_new %>%
furniture::table1("Pre" = totalcin,
"Post" = totalcw6,
"Change" = totalc_diff,
digits = 2)
cancer_new %>%
cor.test(~ totalcin + totalcw6,
data = .)
cancer_long %>%
t.test(totalc ~ time,
data = .,
paired = TRUE)
cancer_long
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(comment     = NA,
cache       = TRUE,
echo        = TRUE,
warning     = FALSE,
message     = FALSE,
fig.align   = "center",   # center all figures
fig.width   = 6.5,        # set default figure width to 4 inches
fig.height  = 4.5)        # set default figure height to 3 inches
knitr::include_graphics("figures/formula_sheet_p1_2samples.jpg")
knitr::include_graphics("figures/formula_sheet_p1_matched.jpg")
library(DT)
library(tidyverse)    # Loads several very helpful 'tidy' packages
library(haven)        # Read in SPSS datasets
library(furniture)    # Nice tables (by our own Tyson Barrett)
library(psych)        # Lots of nice tid-bits
cancer_raw <- haven::read_spss("data/cancer.sav")
cancer_clean <- cancer_raw %>%
dplyr::rename_all(tolower) %>%
dplyr::mutate(id = factor(id)) %>%
dplyr::mutate(trt = factor(trt,
labels = c("Placebo",
"Aloe Juice"))) %>%
dplyr::mutate(stage = factor(stage))
cancer_clean %>%
DT::datatable(options = list(pageLength = 5))
cancer_new <- cancer_clean %>%
dplyr::mutate(totalc_diff = totalcw6 - totalcin) %>%
dplyr::filter(complete.cases(totalcin, totalcw6)) %>%
dplyr::select(id, totalcin, totalcw6, totalc_diff)
cancer_new %>%
DT::datatable(options = list(pageLength = 5))
cancer_long <- cancer_new %>%
tidyr::pivot_longer(cols = c(totalcin, totalcw6),
names_to = c(".value", "time"),
names_pattern = "(.*)(..)") %>%
dplyr::mutate(time = factor(time) %>%
forcats::fct_recode("Intake" = "in",
"Week 6" = "w6"))
cancer_long %>%
DT::datatable(options = list(pageLength = 5))
cancer_long %>%
ggplot(aes(x = totalc)) +
geom_histogram(aes(y=..density..),
binwidth = 1,
alpha = .8) +
geom_density(aes(color = "Density")) +
facet_wrap(~ time, ncol = 1) +
geom_vline(data = cancer_long %>%
dplyr::group_by(time) %>%
dplyr::summarise(M_totalc = mean(totalc,
na.rm = TRUE)),
aes(xintercept = M_totalc,
color = "Mean"),
size = 2) +
theme_bw() +
labs(x = "Total Oral Condition",
color = NULL) +
scale_color_manual(values = c("blue", "red")) +
theme(legend.position = c(1, 1),
legend.justification = c(1.1, 1.1),
legend.background = element_rect(color = "black"))
cancer_long %>%
ggplot(aes(x = time,
y = totalc)) +
geom_boxplot(fill = "gray") +
stat_summary(fun = mean,
geom = "point",
color = "red",
size = 5,
shape = 18) +
theme_bw() +
labs(x = NULL,
y = "Total Oral Condition")
cancer_long %>%
ggplot(aes(x = time,
y = totalc)) +
geom_violin(fill = "gray") +
geom_point() +
geom_line(aes(group = id)) +
stat_summary(fun = mean,
geom = "point",
color = "red",
size = 5,
shape = 18) +
stat_summary(aes(group = 1),
fun = mean,
geom = "line",
color = "red",
size = 1,
shape = 18) +
theme_bw() +
labs(x = NULL,
y = "Total Oral Condition")
cancer_new %>%
ggplot(aes(x = totalcin,
y = totalcw6)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Total Oral Condition at Intake",
y = "Total Oral Condition at Six Weeks")
cancer_new %>%
ggplot(aes(totalc_diff)) +
geom_histogram(aes(y=..density..),
binwidth = 1,
alpha = .8) +
geom_density(aes(color = "Density")) +
geom_vline(xintercept = 0,
linetype = "dashed") +
geom_vline(data = cancer_long %>%
dplyr::summarise(M_totalc_diff = mean(totalc_diff,
na.rm = TRUE)),
aes(xintercept = M_totalc_diff,
color = "Mean"),
size = 2) +
theme_bw() +
labs(x = "Total Oral Condition",
color = NULL) +
scale_color_manual(values = c("blue", "red"))  +
theme(legend.position = c(1, 1),
legend.justification = c(1.1, 1.1),
legend.background = element_rect(color = "black"))
cancer_new %>%
ggplot(aes(x = "test",
y = totalc_diff)) +
geom_boxplot(fill = "gray") +
stat_summary(fun = mean,
geom = "point",
color = "red",
size = 5,
shape = 18) +
theme_bw() +
labs(x = NULL,
y = "Change in Total Oral Condition")  +
geom_hline(yintercept = 0,
linetype = "dashed")
cancer_new %>%
furniture::table1("Pre" = totalcin,
"Post" = totalcw6,
"Change" = totalc_diff,
digits = 2)
cancer_new %>%
cor.test(~ totalcin + totalcw6,
data = .)
d =3/(3.68)
d
cancer_long %>%
t.test(totalc ~ time,
data = .,
paired = TRUE)
cancer_long %>%
t.test(totalc ~ time,  # DV_cont ~ IV_time
data = .,
alternative = "two.sided",
paired = TRUE)
cancer_long %>%
t.test(totalc ~ time,  # DV_cont ~ IV_time
data = .,
alternative = "less",
paired = TRUE)
?as.date
?as.Date
df <-data.frame(month = c(3, 5, 11),
year = c(2010, 2018, 1999))
df
df %>%
dplyr::mutate(dt = lubridate::ym(year, month))
library(tidyverse)
df %>%
dplyr::mutate(dt = lubridate::ym(year, month))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month)))
df <-data.frame(id = 1:3,
month = c(3, 5, 11),
year = c(2010, 2018, 1999))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month)))
df <-data.frame(id = c(1, 1, 2),
month = c(3, 5, 11),
year = c(2010, 2018, 1999))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month)))
df <-data.frame(id = c(1, 1, 2),
month = c(3, 5, 11),
year = c(2010, 2018, 1999))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_1 = min(dt),
dt_l = max(dt))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt))
?difftime
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(df_f, df_l, units = "months")> 18 ~ "yes"))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_f, dt_l, units = "months")> 18 ~ "yes"))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_f, dt_l, units = "month")> 18 ~ "yes"))
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_f, dt_l, units = "month")> 18 ~ "yes"))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_f, dt_l, units = "weeks")> 78 ~ "yes"))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_f, dt_l, units = "weeks") > 78 ~ "yes",
difftime(df_f, df_l, units = "weeks") < 78 ~ "no"))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_f, dt_l, units = "weeks") > 78 ~ "yes",
difftime(dt_f, dt_l, units = "weeks") < 78 ~ "no"))
df <-data.frame(id = c(1, 1, 2),
month = c(3, 5, 11),
year = c(2014, 2018, 1999))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_f, dt_l, units = "weeks") > 78 ~ "yes",
difftime(dt_f, dt_l, units = "weeks") < 78 ~ "no"))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_l, dt_f, units = "weeks") > 78 ~ "yes",
difftime(dt_l, dt_f, units = "weeks") < 78 ~ "no"))
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_l, dt_f, units = "weeks") %>% is.na()  ~ "missing",
difftime(dt_l, dt_f, units = "weeks") = NA ~ "no dx",
df %>%
dplyr::mutate(dt = lubridate::ym(paste(year, "-", month))) %>%
dplyr::mutate(dt_f = min(dt),
dt_l = max(dt)) %>%
dplyr::mutate(x = case_when(difftime(dt_l, dt_f, units = "weeks") %>% is.na()  ~ "missing",
difftime(dt_l, dt_f, units = "weeks") == 0 ~ "no dx",
difftime(dt_l, dt_f, units = "weeks") > 78 ~ "more than 18 mon",
difftime(dt_l, dt_f, units = "weeks") < 78 ~ "less than 18 mon"))
?pmin
# set global chunk options...
#  this changes the defaults so you don't have to repeat yourself
knitr::opts_chunk$set(comment     = NA,
cache       = TRUE,
echo        = TRUE,
warning     = FALSE,
message     = FALSE,
fig.align   = "center", # center all figures
fig.width   = 5,        # set default figure width to 4 inches
fig.height  = 3)        # set default figure height to 3 inches
library(tidyverse)    # Loads several very helpful 'tidy' packages
library(readxl)       # Read in Excel datasets
library(furniture)    # Nice tables (by our own Tyson Barrett)
schizo <- data.frame(id       = c(1:10),
yr_hos   = c( 5,  7, 12,  5, 11,  3,  7,  2,  9,  6),
ori_test = c(22, 26, 16, 20, 18, 30, 14, 24, 15, 19))
GRE <- data.frame(id          = c(1:5),
verbalGRE_1 = c(540, 510, 580, 550, 520),
verbalGRE_2 = c(570, 520, 600, 530, 520))
test_scores <-  data.frame(id      = c(1:12),
spatial = c(13, 32, 41, 26, 28, 12, 19, 33, 24, 46, 22, 17),
math    = c(19, 25, 31, 18, 37, 16, 14, 28, 20, 39, 21, 15))
child_vars  <-  data.frame(child = c(1:8),
shoe  = c(5.2, 4.7, 7.0, 5.8, 7.2, 6.9, 7.7, 8.0),
read  = c(1.7, 1.5, 2.7, 3.1, 3.9, 4.5, 5.1, 7.4),
age   = c(  5,   6,   7,   8,   9,  10,  11,  12))
memory <- data.frame(id    = c(1:9),
sound = c(8, 5, 6, 10, 3, 4, 7, 11, 9),
look  = c(4, 5, 3, 11, 2, 6, 4,  6, 7))
data_clean <- read_excel("Ihno_dataset.xls") %>%
dplyr::rename_all(tolower) %>%
dplyr::mutate(genderF = factor(gender,
levels = c(1, 2),
labels = c("Female",
"Male"))) %>%
dplyr::mutate(majorF = factor(major,
levels = c(1, 2, 3, 4,5),
labels = c("Psychology",
"Premed",
"Biology",
"Sociology",
"Economics"))) %>%
dplyr::mutate(reasonF = factor(reason,
levels = c(1, 2, 3),
labels = c("Program requirement",
"Personal interest",
"Advisor recommendation"))) %>%
dplyr::mutate(exp_condF = factor(exp_cond,
levels = c(1, 2, 3, 4),
labels = c("Easy",
"Moderate",
"Difficult",
"Impossible"))) %>%
dplyr::mutate(coffeeF = factor(coffee,
levels = c(0, 1),
labels = c("Not a regular coffee drinker",
"Regularly drinks coffee")))  %>%
dplyr::mutate(hr_base_bps = hr_base / 60) %>%
dplyr::mutate(anx_plus = rowsums(anx_base, anx_pre, anx_post)) %>%
dplyr::mutate(hr_avg = rowmeans(hr_base, hr_pre, hr_post)) %>%
dplyr::mutate(statDiff = statquiz - exp_sqz)
GRE
GRE_long <- GRE %>%
tidyr::pivot_longer(cols         = c(verbalGRE_1, verbalGRE_2),
names_to     = "time",
names_prefix = "verbalGRE_",
names_ptypes = list(time = factor()),
values_to    = "verbalGRE")
GRE_long
GRE %>%
furniture::table1("First Attempt"  = verbalGRE_1,
"Second Attempt" = verbalGRE_2,
"Difference in Attempts" = verbalGRE_1 - verbalGRE_2,
digits = 2,
output = "markdown")
GRE_long %>%
ggplot(aes(x = time,
y = verbalGRE,
group = 1)) +
geom_point(alpha = .5) +
geom_line(aes(group = id), alpha = .5) +
stat_summary(fun = mean, shape = 10, size = 1) +
stat_summary(fun = mean, geom = "line", linetype = "dashed", size = 1.25) +
theme_bw() +
labs(x = NULL,
y = "Verbal GRE Score") +
scale_x_discrete(labels = c("1" = "First Attempt",
"2" = "Second Attempt"))
# Paired t-test: verbalGRE by time
# Compute a new variable --> save as: GRE_new
# 1-sample t test: population mean of verbalGRE_diff = 0 (no difference)
memory
memory_long <- memory %>%
tidyr::pivot_longer(cols         = c(sound, look),
names_to     = "type",
names_ptypes = list(type = factor()),
values_to    = "errors")
memory_long %>%
psych::headTail(top = 6)
memory %>%
furniture::table1("Sound Alike Word Errors" = sound,
"Look Alike Word Errors"  = look,
"Difference in Number of Errors" = sound - look,
digits = 2,
output = "markdown")
# Paired t-test: errors by type --> ONE tail
memory_long %>%
t.test(errors ~ type,
data = .)
# Paired t-test: errors by type --> ONE tail
memory_long %>%
t.test(errors ~ type,
data = .,
paired = TRUE)
# Paired t-test: errors by type --> ONE tail
memory_long %>%
t.test(errors ~ type,
data = .,
alternative = "greater",
paired = TRUE)
?save
?write.
csv
?write.csv
setwd("~/GitHub/PSY-6600_public/slides")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(comment     = NA,
cache       = TRUE,
echo        = TRUE,
warning     = FALSE,
message     = FALSE,
fig.align   = "center",   # center all figures
fig.width   = 6.5,        # set default figure width to 4 inches
fig.height  = 4.5)        # set default figure height to 3 inches
knitr::include_graphics("figures/Simple-randomization.png")
knitr::include_graphics("figures/Matched-pairs.jpg")
knitr::include_graphics("figures/Matched-pairs.png")
knitr::include_graphics("figures/Simple-randomization.png")
knitr::include_graphics("figures/Matched-pairs.png")
knitr::include_graphics("figures/crossover_color.png")
knitr::include_graphics("figures/pretest_posttest_boxes.png")
knitr::include_graphics("figures/Matched-pairs.png")
