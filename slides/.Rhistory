emmeans::emmeans(~ feedback) %>%
pairs(adjust = "none")
# RM ANOVA: means plot <--feedback
fit_ano %>%
emmeans::emmip(~ feedback,
CIs = TRUE)
# Mixed ANOVA: post hoc pairwise tests <-- difficulty
fit_ano %>%
emmeans::emmeans(~ difficulty) %>%
pairs(adjust = "tukey")
# RM ANOVA: means plot <-- difficulty
fit_ano %>%
emmeans::emmip( ~ difficulty,
CIs = TRUE)
brain_wide
brain_long <-  brain_wide %>%
tidyr::pivot_longer(-id,
names_to = c("damage", "stimuli"),
names_sep = "_",
names_ptypes = list(damage = factor(),
stimuli = factor()),
values_to = "longest_correct") %>%
dplyr::mutate(id = paste(id, damage, sep = "_") %>%
factor()) %>%
dplyr::mutate(damage = damage %>%
forcats::fct_recode("Left" = "left",
"Right" = "right",
"Neither" = "none")) %>%
dplyr::mutate(stimuli = stimuli %>%
forcats::fct_recode("Digits" = "digit",
"Letters" = "letter",
"Mixed" = "mixed"))
psych::headTail(brain_long)
# Raw data: summary table
brain_long %>%
tidyr::pivot_wider(names_from = stimuli,
values_from = longest_correct) %>%
dplyr::select(-id) %>%
dplyr::group_by("Hemisphere of Brain Damage" = damage) %>%
furniture::table1(Digits, Letters, Mixed,
total = TRUE,
output = "latex2",
caption = "Descriptives: Recall by Hemisphere and Stimuli")
brain_long %>%
ggplot(aes(x = stimuli,
y = longest_correct,
group = id)) +
geom_point() +
geom_line() +
facet_grid(.~ damage) +
theme_bw() +
labs(x = "Type of Stimuli",
y = "Longest Sequence Correct")
brain_long %>%
dplyr::mutate(damage = damage %>%
forcats::fct_rev()) %>%
ggplot(aes(x = stimuli,
y = longest_correct,
group = damage)) +
stat_summary(aes(shape = damage)) +
stat_summary(aes(linetype = damage),
fun.y = mean,
geom = "line") +
theme_bw() +
labs(x = "Type of Stimuli",
y = "Longest Sequence Correct",
shape    = "Damaged Hemisphere",
linetype = "Damaged Hemisphere") +
theme(legend.position = c(0, 0),
legend.justification = c(-0.05, -0.1),
legend.background = element_rect(color = "black"),
legend.key.width = unit(2, "cm")) +
scale_shape_manual(values = c(15, 19, 17)) +
scale_linetype_manual(values = c("solid", "longdash", "dotted")) +
coord_cartesian(ylim = c(2, 9.5))
# Mixed ANOVA:  with sphericity tests and corrections
fit_brain <- brain_long %>%
afex::aov_4(longest_correct ~ damage + (stimuli|id),
data = .)
summary(fit_brain)
# Mixed ANOVA: post hoc pairwise tests <-- damage
fit_brain %>%
emmeans::emmeans(~ damage) %>%
pairs(adjust = "none")
# RM ANOVA: means plot <-- damage
fit_brain %>%
emmeans::emmip(~ damage,
CIs = TRUE)
# Mixed ANOVA: post hoc pairwise tests <-- stimuli
fit_brain %>%
emmeans::emmeans(~ stimuli) %>%
pairs(adjust = "none")
# RM ANOVA: means plot <-- stimuli
fit_brain %>%
emmeans::emmip(~ stimuli,
CIs = TRUE)
ihno_clean <- read_excel("Ihno_dataset.xls") %>%
dplyr::rename_all(tolower) %>%
dplyr::mutate(genderF = gender %>%
factor(levels = c(1, 2),
labels = c("Female",
"Male"))) %>%
dplyr::mutate(majorF = major %>%
factor(levels = c(1, 2, 3, 4,5),
labels = c("Psychology",
"Premed",
"Biology",
"Sociology",
"Economics"))) %>%
dplyr::mutate(reasonF = reason %>%
factor(levels = c(1, 2, 3),
labels = c("Program requirement",
"Personal interest",
"Advisor recommendation"))) %>%
dplyr::mutate(exp_condF = exp_cond %>%
factor(levels = c(1, 2, 3, 4),
labels = c("Easy",
"Moderate",
"Difficult",
"Impossible"))) %>%
dplyr::mutate(coffeeF = coffee %>%
factor(levels = c(0, 1),
labels = c("Not a regular coffee drinker",
"Regularly drinks coffee")))
ihno_anx_long <- ihno_clean %>%
tidyr::pivot_longer(cols = c(anx_base, anx_pre, anx_post),
names_to = "time",
names_prefix = "anx_",
names_ptypes = list(time = factor()),
values_to = "anxiety")
ihno_anx_long %>%
dplyr::select(sub_num, majorF, time, anxiety) %>%
psych::headTail()
# Mixed ANOVA:  with sphericity tests and corrections
fit_anx_major <- ihno_anx_long %>%
afex::aov_4(anxiety ~ majorF + (time|sub_num),
data = .,
anova_table = list(correction = "none",
es = c("ges", "pes")))
# Mixed ANOVA: effect sizes
fit_anx_major
# Mixed ANOVA: means plot <-- interaction
fit_anx_major %>%
emmeans::emmip(majorF ~ time,
CIs = TRUE)
ihno_hr_long <- ihno_clean %>%
tidyr::pivot_longer(cols = c(hr_base, hr_pre, hr_post),
names_to = "time",
names_prefix = "hr_",
names_ptypes = list(time = factor()),
values_to = "heart_rate")
ihno_hr_long %>%
dplyr::select(sub_num, genderF, time, heart_rate) %>%
psych::headTail()
# Mixe ANOVA:  with sphericity tests and corrections
fit_hr_gender <- ihno_hr_long %>%
afex::aov_4(hr ~ genderF + (time|sub_num),
data = .,
anova_table = list(correction = "none",
es = c("ges", "pes")))
# Mixe ANOVA:  with sphericity tests and corrections
fit_hr_gender <- ihno_hr_long %>%
afex::aov_4(hr ~ genderF + (time|sub_num),
data = .,
anova_table = list(correction = "none",
es = c("ges", "pes")))
ihno_hr_long
# Mixe ANOVA:  with sphericity tests and corrections
fit_hr_gender <- ihno_hr_long %>%
afex::aov_4(hr ~ genderF + (time|sub_num),
data = .,
anova_table = list(correction = "none",
es = c("ges", "pes")))
ihno_hr_long %>%
afex::aov_4(hr ~ genderF + (time|sub_num),
data = .
)
# Mixe ANOVA:  with sphericity tests and corrections
fit_hr_gender <- ihno_hr_long %>%
afex::aov_4(heart_rate ~ genderF + (time|sub_num),
data = .,
anova_table = list(correction = "none",
es = c("ges", "pes")))
summary(fit_hr_gender)
# Mixed ANOVA: post hoc pairwise tests <-- time
fit_hr_gender %>%
emmeans::emmeans(~ time) %>%
pairs(adjust = "none")
?afex::aov_4
brain_long
# Mixed ANOVA:  with sphericity tests and corrections
fit_brain <- brain_long %>%
afex::aov_4(longest_correct ~ damage ~ (stimuli|id),
data = .)
summary(fit_brain)
fit_brain
install.packages(c("car", "corrplot", "dplyr", "forcats", "furniture", "GGally", "knitr", "likert", "magrittr", "pander", "psych", "redcapAPI", "REDCapR", "stringr", "texreg", "tibble", "tidyr", "tidyverse"))
knitr::opts_chunk$set(comment     = NA,
cache       = TRUE,
echo        = TRUE,
error       = FALSE,
warning     = FALSE,
message     = FALSE,
fig.pos     = 'hb',
fig.align   = "center",
fig.width   = 6,
fig.height  = 4.5)
options(xtable.comment = FALSE,
xtable.table.placement ="h",
xtable.caption.placement = "top",
xtable.include.rownames = FALSE,
xtable.booktabs = TRUE,
xtable.digits = 3)
library(magrittr)     # forward pipe operators for R
library(tidyverse)    # Loads several core packages
library(redcapAPI)       # Importing Excel
library(REDCapR)
library(likert)       # Ploting likert-like items
library(GGally)       # Extension to 'ggplot2' (ggpairs)
library(corrplot)     # Visualize correlation matrix
library(psych)        # Handy tid-bits
library(furniture)    # Tables, descriptive
library(texreg)       # Tables, models
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
df_raw <- "https://redcap.cehs.usu.edu/api/" %>%
redcapAPI::redcapConnection(token = "4033A52C850982DFCAF82087C65CC847") %>%
redcapAPI::exportRecords(factors = TRUE,
labels  = FALSE,
survey  = FALSE)
tibble::glimpse(df_raw)
df_raw %>% dplyr::select(redcap_event_name) %>% table
df_wide <- df_raw %>%
dplyr::mutate(id = factor(record_id)) %>%
dplyr::mutate(class = redcap_event_name %>%
stringr::str_remove("collect_arm_") %>%
as.numeric() %>%
factor() %>%
forcats::fct_drop()) %>%
dplyr::mutate(std_birthyear = as.numeric(as.character(std_birthyear))) %>%
dplyr::mutate(std_age = 2020 - std_birthyear) %>%
dplyr::mutate(class_science = class_science %>%
forcats::fct_recode("Physical" = "Physical Science (Biology, Chemistry, ect.)",
"Social"   = "Social Science (Psychology, Sociology, ect.)")) %>%
dplyr::mutate(class_size = class_size %>%
forcats::fct_recode("Small"  = "Small (less than 100)",
"Medium" = "Medium (100-200)",
"Large"  = "Large (more than 200)")) %>%
dplyr::mutate(std_attend = std_attend %>%
forcats::fct_recode("Rarely"    = "Never/Rarely (Attended 1-5 classes)",
"Sometimes" = "Sometimes (Missed 5-10 classes)",
"Regularly" = "Regularly (Missed 3-5 classes)",
"Mostly"    = "Almost Always (Missed 1-2 classes)",
"Always "   = "Always ")) %>%
dplyr::mutate_at(vars(starts_with("freq_")),
factor,
levels = c("Never",
"Rarely",
"Sometimes",
"Frequently",
"Always")) %>%
dplyr::filter(loi_agree == "I Agree",
informed_consent_complete == "Complete") %>%
dplyr::select(id,
class,
background_complete,
engagement_complete,
std_gender,
gender_other,
std_birthyear,
std_age,
std_ethnicity,
std_ethnicity_other,
std_rank,
class_science,
class_size,
std_attend,
starts_with("freq"),
starts_with("agree_"),
starts_with("conf")) %>%
dplyr::mutate()
tibble::glimpse(df_wide)
df_wide %>%
dplyr::filter(engagement_complete == "Complete",
std_gender %in% c("Male", "Female")) %>%
dplyr::group_by(class, class_science) %>%
dplyr::summarise(n = n()) %>%
tidyr::pivot_wider(names_from = class_science,
values_from = n) %>%
pander::pander(caption = "Discrepincies in Type of Class within Class")
df_wide %>%
dplyr::filter(engagement_complete == "Complete",
std_gender %in% c("Male", "Female")) %>%
dplyr::group_by(class, class_size) %>%
dplyr::summarise(n = n()) %>%
tidyr::pivot_wider(names_from = class_size,
values_from = n) %>%
pander::pander(caption = "Discrepincies in Class Size within Class")
df_wide %>%
dplyr::filter(engagement_complete == "Complete",
!std_gender %in% c("Male", "Female")) %>%
dplyr::select(id, class, gender_other) %>%
pander::pander(caption = "Write-in Genders")
df_wide %>%
dplyr::group_by("Engagement Complete" = engagement_complete) %>%
furniture::table1("Student's Gender"  = std_gender,
total = TRUE,
na.rm = FALSE,
caption = "Crosstabulation of Gemder by Status of Completion of the Engagment Survey",
output = "markdown")
df_model <- df_wide %>%
dplyr::filter(engagement_complete == "Complete",
std_gender %in% c("Male", "Female")) %>%
dplyr::mutate_at(vars(std_gender, std_attend),
forcats::fct_drop) %>%
dplyr::select(-gender_other,
-background_complete,
-engagement_complete) %>%
dplyr::group_by(class) %>%
dplyr::mutate(class_science = Mode(class_science)) %>%  # 2 discrepencies (32, 67)
dplyr::ungroup()
tibble::glimpse(df_model)
df_model %>%
dplyr::group_by(class, std_gender, "type" = class_science) %>%
dplyr::summarise(n = n(),
) %>%
tidyr::pivot_wider(names_from = std_gender,
values_from = n) %>%
dplyr::mutate(Total = Male + Female) %>%
dplyr::arrange(type) %>%
pander::pander(caption = "Class Sizes, by Gender")
df_model %>%
dplyr::group_by(std_gender, "type" = class_science) %>%
dplyr::summarise(n = n(),
) %>%
tidyr::pivot_wider(names_from = std_gender,
values_from = n) %>%
dplyr::mutate(Total = Male + Female) %>%
pander::pander(caption = "Class Type, by Gender")
df_model %>%
dplyr::group_by("Gender" = std_gender) %>%
furniture::table1("Age" = std_age,
"Ethnicity" = std_ethnicity,
"Class Rank" = std_rank,
"Class Attendance" = std_attend,
total = TRUE,
test = TRUE,
type = "full",
na.rm = FALSE,
caption = "Demographics Summary Statistics",
output = "markdown")
df_model %>%
dplyr::filter(std_ethnicity == "Other") %>%
furniture::table1("Wrote:" = std_ethnicity_other,
na.rm = FALSE,
output = "markdown",
caption = "Ethnicity Write-in Responses")
df_model %>%
car::leveneTest(std_age ~ std_gender,
data = .,
center = "mean")
df_model %>%
t.test(std_age ~ std_gender,
data = .,
paired = FALSE,
var.equal = FALSE)
df_model %>%
ggplot(aes(x = std_age,
y = ..density..,
fill  = forcats::fct_rev(std_gender))) +
geom_histogram(alpha = .6,
color = "black") +
theme_bw() +
facet_grid(std_gender ~.) +
labs(x = "Age",
y = "Proportion",
fill = NULL) +
theme(legend.position = "none")
ggsave(filename = "histogram_age_gender.png",
width   = 6,
height = 4.5,
units  = "in")
fit_chisq_rank <- df_model %>%
dplyr::select(std_rank, std_gender) %>%
table() %>%
chisq.test()
fit_chisq_rank
fit_chisq_rank$resid
df_model %>%
ggplot(aes(x = std_rank,
y = ..prop..,
group = forcats::fct_rev(std_gender),
fill  = forcats::fct_rev(std_gender))) +
geom_bar(alpha = .6,
color = "black",
position = "dodge") +
theme_bw() +
labs(x = "Class Rank",
y = "Proportion",
fill = NULL) +
theme(legend.background = element_rect(color = "black"),
legend.position = c(1, 1),
legend.justification = c(1.1, 1.1))
df_model %>%
ggplot(aes(x = std_attend,
y = ..prop..,
group = forcats::fct_rev(std_gender),
fill  = forcats::fct_rev(std_gender))) +
geom_bar(alpha = .6,
color = "black",
position = "dodge") +
theme_bw() +
labs(x = NULL,
y = "Proportion",
fill = NULL) +
theme(legend.background = element_rect(color = "black"),
legend.position = c(1, 0),
legend.justification = c(1.1, -.1)) +
coord_flip()
ggsave(filename = "histogram_rank_gender.png",
width   = 6,
height = 4.5,
units  = "in")
df_model %>%
dplyr::select(starts_with("freq_")) %>%
data.frame() %>%
likert::likert(items = .,
grouping =df_model$std_gender) %>%
plot()
ggsave(filename = "item_freq_gender.png",
width  = 6,
height = 7,
units  = "in")
df_model %>%
dplyr::select(starts_with("agree_teacher")) %>%
data.frame() %>%
likert::likert(items = .,
grouping =df_model$std_gender) %>%
plot()
ggsave(filename = "teacher_agree_gender.png",
width  = 6,
height = 7,
units  = "in")
df_model %>%
dplyr::select(starts_with("agree_other"),
starts_with("agree_self")) %>%
data.frame() %>%
likert::likert(items = .,
grouping =df_model$std_gender) %>%
plot()
ggsave(filename = "teacher_agree_other_self.png",
width  = 6,
height = 4.5,
units  = "in")
df_model %>%
dplyr::select(starts_with("conf")) %>%
data.frame() %>%
likert::likert(items = .,
grouping =df_model$std_gender) %>%
plot()
ggsave(filename = "confident_self.png",
width  = 6,
height = 3,
units  = "in")
fred <- c(100, 90, 85)
fred
mean(fred)
sd(fred)
sum(fred)
length(fred)
?mean
library(tidyverse)
library(readxl)
df_0 <- readxl::read_excel("ihno_dataset.xls")
df_0
setwd("~/GitHub/PSY-6600_public/slides")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(comment     = ">",
echo        = TRUE)
knitr::include_graphics("figures/tidyverse.png")
knitr::include_graphics("figures/data_verb_input_output.png")
knitr::include_graphics("figures/pipeline_compare_arrows.png")
knitr::include_graphics("figures/pipeline_1.png")
knitr::include_graphics("figures/pipeline_step2.png")
knitr::include_graphics("figures/pipeline_step2.png")
knitr::include_graphics("figures/pipeline_step1.png")
knitr::include_graphics("figures/pipeline_1.png")
```{r, echo=FALSE}
knitr::include_graphics("figures/pipe_verb.png")
knitr::include_graphics("figures/pipeline_compare_arrows.png")
knitr::include_graphics("figures/pipeline_compare.png")
knitr::include_graphics("figures/pipeline_compare.PNG")
knitr::include_graphics("figures/pipline_compare.PNG")
knitr::include_graphics("figures/pipeline_compare.png")
knitr::include_graphics("figures/pipline_compare_arrows.PNG")
knitr::include_graphics("figures/pipeline_stesp_pipe.png")
knitr::include_graphics("figures/assembly-line.png")
knitr::include_graphics("figures/pipline_compare.PNG")
knitr::include_graphics("figures/chaining_data_verbs.png")
mean(df$age)
df <- data.frame(id   = c(100, 101, 102, 103),
name = c("Joe", "Jill", "Meg", "Pat"),
age  = c(10, 9.5, NA, 11),
trt  = as.factor(c("A", "B", "A", "B")))
mean(df$age)
knitr::include_graphics("figures/summation_notation_nice.png")
knitr::include_graphics("figures/sigma_notation_nice.png")
knitr::include_graphics("figures/sigma_notation_nice.jpg")
install.packages(c("backports", "git2r", "glue", "insight", "jomo", "lavaan", "mnormt", "openxlsx", "pkgbuild", "ps", "rlang", "scales", "tidyr", "vctrs"))
setwd("~/GitHub/PSY-6600_public/slides")
