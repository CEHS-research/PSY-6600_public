alpha = .4) +
# geom_ribbon(aes(group = Leg,
#                 ymin = lower, # 95% CI
#                 ymax = upper),
#             alpha = .2) +
geom_ribbon(aes(group = Leg,
ymin = fit - se, # plus/minus 1xSEM
ymax = fit + se),
alpha = .2) +
geom_line(aes(linetype = Leg)) +
theme_bw() +
labs(y = "Estimated Marginal Mean\nMuscle Response Ratio, Mean EMG REACH/STEP",
x = "Stop Signal Reaction Time (SSRT), ms",
linetype = NULL) +
theme(legend.position = "none")  +
geom_text(data = ss$slopes %>%
dplyr::rename("Leg" = "Value of Leg") %>%
dplyr::mutate(stars = add_stars(p)) %>%
dplyr::mutate(text  = paste0(Leg,
"\nb = ",
round(Est., 4),
", p = ",
round(p, 3) %>% str_sub(2),
stars)) %>%
dplyr::mutate(SSRT = case_when(Leg == "Stance Leg" ~ 222,
Leg == "Step Leg"   ~ 201),
fit  = case_when(Leg == "Stance Leg" ~ 0.7,
Leg == "Step Leg"   ~ 1.15)),
aes(label = text)) +
scale_x_continuous(breaks = seq(from = 140, to = 240, by = 20)) +
scale_linetype_manual(values = c("solid", "longdash"))
ggsave(filename = "fig_3.tiff",
width = 6,
height = 4,
units = "in",
dpi = 600)
effects::Effect(focal.predictors = c("Leg", "SSRT_Gc"),
mod = fit_final,
xlevels = list(SSRT = seq(from = min(df$SSRT_Gc),
to   = max(df$SSRT_Gc),
by   = .1))) %>%
data.frame() %>%
dplyr::mutate(SSRT =SSRT_Gc + 193.205) %>%
ggplot(aes(x = SSRT,
y = fit)) +
geom_hline(yintercept = 1,
alpha = .4) +
geom_ribbon(aes(group = Leg,
ymin  = fit - se,
ymax  = fit + se),
alpha = .3) +
geom_line() +
theme_bw() +
labs(y = "Estimated Marginal Mean\nMuscle Response Ratio, Mean EMG REACH/STEP",
x = "Stop Signal Reaction Time (SSRT), ms") +
facet_grid(~ Leg) +
geom_text(data = ss$slopes %>%
dplyr::rename("Leg" = "Value of Leg") %>%
dplyr::mutate(stars = add_stars(p)) %>%
dplyr::mutate(text  = paste0("b = ",
round(Est., 4),
"\np = ",
round(p, 3) %>% str_sub(2),
stars)),
aes(label = text),
x = 235,
y = 0.5,
hjust = "right",
vjust = "bottom") +
scale_x_continuous(breaks = seq(from = 140, to = 240, by = 20))
ggsave(filename = "fig_3_alt.tiff",
width = 6,
height = 4,
units = "in",
dpi = 600)
ggsave(filename = "fig_power.tiff",
width = 6,
height = 4,
units = "in",
dpi = 600)
df %>%
dplyr::filter(Leg == "Stance Leg") %>%
cor.test(~ Ratio + SSRT,
data = .)
df %>%
dplyr::filter(Leg == "Stance Leg") %>%
dplyr::group_by(id, SSRT) %>%
dplyr::summarise(mean_Ratio = mean(Ratio)) %>%
cor.test(~ mean_Ratio + SSRT,
data = .)
fit_stance <- lmerTest::lmer(Ratio ~ SSRT + (1|id),
data = df %>% dplyr::filter(Leg == "Stance Leg"),
REML = TRUE)
summary(fit_stance)
anova(fit_stance)
r2glmm::r2beta(model  = fit_stance,
method = "sgv") %>%
data.frame() %>%
dplyr::mutate(r = sqrt(Rsq)) %>%
dplyr::filter(Effect == "SSRT") %>%
dplyr::select(Effect, Rsq, r)
r2glmm::r2beta(model  = fit_stance,
method = "kr") %>%
data.frame() %>%
dplyr::mutate(r = sqrt(Rsq)) %>%
dplyr::filter(Effect == "SSRT") %>%
dplyr::select(Effect, Rsq, r)
r2glmm::r2beta(model  = fit_stance,
method = "nsj") %>%
data.frame() %>%
dplyr::mutate(r = sqrt(Rsq)) %>%
dplyr::filter(Effect == "SSRT") %>%
dplyr::select(Effect, Rsq, r)
performance::r2_nakagawa(fit_stance)
df %>%
dplyr::filter(Leg == "Step Leg") %>%
cor.test(~ Ratio + SSRT,
data = .)
df %>%
dplyr::filter(Leg == "Step Leg") %>%
dplyr::group_by(id, SSRT) %>%
dplyr::summarise(mean_Ratio = mean(Ratio)) %>%
cor.test(~ mean_Ratio + SSRT,
data = .)
fit_step <- lmerTest::lmer(Ratio ~ SSRT + (1|id),
data = df %>%  dplyr::filter(Leg == "Step Leg"),
REML = TRUE)
summary(fit_step)
anova(fit_step)
r2glmm::r2beta(model  = fit_step,
method = "sgv") %>%
data.frame() %>%
dplyr::mutate(r = sqrt(Rsq)) %>%
dplyr::filter(Effect == "SSRT") %>%
dplyr::select(Effect, Rsq, r)
r2glmm::r2beta(model  = fit_step,
method = "kr") %>%
data.frame() %>%
dplyr::mutate(r = sqrt(Rsq)) %>%
dplyr::filter(Effect == "SSRT") %>%
dplyr::select(Effect, Rsq, r)
r2glmm::r2beta(model  = fit_step,
method = "nsj") %>%
data.frame() %>%
dplyr::mutate(r = sqrt(Rsq)) %>%
dplyr::filter(Effect == "SSRT") %>%
dplyr::select(Effect, Rsq, r)
fit_final_obs <- lme4::lmer(Ratio ~ SSRT_Gc:Leg + SSRT_Gc + Leg + (1|id),
data = df %>% dplyr::mutate(id = as.numeric(id)),
REML = TRUE)
summary(fit_final_obs)
pow_obs <- simr::powerSim(fit_final_obs,
test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_obs
pow_n15 <- simr::extend(fit_final_obs,
along = "id",
n = 15) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n15
pow_n20 <- simr::extend(fit_final_obs,
along = "id",
n = 20) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n20
pow_n25 <- simr::extend(fit_final_obs,
along = "id",
n = 25) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n25
pow_n30 <- simr::extend(fit_final_obs,
along = "id",
n = 30) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n30
rbind((summary(pow_obs) %>% dplyr::mutate(N = 10)),
(summary(pow_n15) %>% dplyr::mutate(N = 15)),
(summary(pow_n20) %>% dplyr::mutate(N = 20)),
(summary(pow_n25) %>% dplyr::mutate(N = 25)),
(summary(pow_n30) %>% dplyr::mutate(N = 30))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
ggsave(filename = "fig_power.tiff",
width = 6,
height = 4,
units = "in",
dpi = 600)
fit_final_new <- fit_final_obs
fixef(fit_final_new)["SSRT_Gc"] <- 0
fixef(fit_final_new)["SSRT_Gc:LegStance Leg"] <- 0.003
pow_n15_new <- simr::extend(fit_final_new,
along = "id",
n = 15) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n15_new
pow_n20_new <- simr::extend(fit_final_new,
along = "id",
n = 20) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n20_new
pow_n25_new <- simr::extend(fit_final_new,
along = "id",
n = 25) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n25_new
pow_n30_new <- simr::extend(fit_final_new,
along = "id",
n = 30) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n30_new
pow_n40_new <- simr::extend(fit_final_new,
along = "id",
n = 40) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n40_new
rbind((summary(pow_n15_new) %>% dplyr::mutate(N = 15)),
(summary(pow_n20_new) %>% dplyr::mutate(N = 20)),
(summary(pow_n25_new) %>% dplyr::mutate(N = 25)),
(summary(pow_n30_new) %>% dplyr::mutate(N = 30))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
rbind((summary(pow_n15_new) %>% dplyr::mutate(N = 15)),
(summary(pow_n20_new) %>% dplyr::mutate(N = 20)),
(summary(pow_n25_new) %>% dplyr::mutate(N = 25)),
(summary(pow_n30_new) %>% dplyr::mutate(N = 30)),
(summary(pow_n40_new) %>% dplyr::mutate(N = 40))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
pow_n50_new <- simr::extend(fit_final_new,
along = "id",
n = 50) %>%
simr::powerSim(test = fixed("SSRT_Gc:Leg", "lr"),
nsim = 200,
seed = 1234)
pow_n50_new
rbind((summary(pow_n15_new) %>% dplyr::mutate(N = 15)),
(summary(pow_n20_new) %>% dplyr::mutate(N = 20)),
(summary(pow_n25_new) %>% dplyr::mutate(N = 25)),
(summary(pow_n30_new) %>% dplyr::mutate(N = 30)),
(summary(pow_n40_new) %>% dplyr::mutate(N = 40)),
(summary(pow_n50_new) %>% dplyr::mutate(N = 50))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
rbind((summary(pow_n15_new) %>% dplyr::mutate(N = 15)),
(summary(pow_n20_new) %>% dplyr::mutate(N = 20)),
(summary(pow_n25_new) %>% dplyr::mutate(N = 25)),
(summary(pow_n30_new) %>% dplyr::mutate(N = 30)),
(summary(pow_n40_new) %>% dplyr::mutate(N = 40)),
(summary(pow_n50_new) %>% dplyr::mutate(N = 50))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_smooth(method = "lm",
formula = y ~ x) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
rbind((summary(pow_n15_new) %>% dplyr::mutate(N = 15)),
(summary(pow_n20_new) %>% dplyr::mutate(N = 20)),
(summary(pow_n25_new) %>% dplyr::mutate(N = 25)),
(summary(pow_n30_new) %>% dplyr::mutate(N = 30)),
(summary(pow_n40_new) %>% dplyr::mutate(N = 40)),
(summary(pow_n50_new) %>% dplyr::mutate(N = 50))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_smooth(method = "lm",
formula = y ~ x**2 + x) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
rbind((summary(pow_n15_new) %>% dplyr::mutate(N = 15)),
(summary(pow_n20_new) %>% dplyr::mutate(N = 20)),
(summary(pow_n25_new) %>% dplyr::mutate(N = 25)),
(summary(pow_n30_new) %>% dplyr::mutate(N = 30)),
(summary(pow_n40_new) %>% dplyr::mutate(N = 40)),
(summary(pow_n50_new) %>% dplyr::mutate(N = 50))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
rbind((summary(pow_n20_new) %>% dplyr::mutate(N = 20)),
(summary(pow_n30_new) %>% dplyr::mutate(N = 30)),
(summary(pow_n40_new) %>% dplyr::mutate(N = 40)),
(summary(pow_n50_new) %>% dplyr::mutate(N = 50))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
rbind((summary(pow_obs) %>% dplyr::mutate(N = 10)),
(summary(pow_n15) %>% dplyr::mutate(N = 15)),
(summary(pow_n20) %>% dplyr::mutate(N = 20)),
(summary(pow_n25) %>% dplyr::mutate(N = 25)),
(summary(pow_n30) %>% dplyr::mutate(N = 30))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
ggsave(filename = "fig_power_obs.tiff",
width = 6,
height = 4,
units = "in",
dpi = 600)
rbind((summary(pow_n20_new) %>% dplyr::mutate(N = 20)),
(summary(pow_n30_new) %>% dplyr::mutate(N = 30)),
(summary(pow_n40_new) %>% dplyr::mutate(N = 40)),
(summary(pow_n50_new) %>% dplyr::mutate(N = 50))) %>%
ggplot(aes(x = N,
y = mean)) +
geom_hline(yintercept = .8,
linetype = "dashed") +
geom_errorbar(aes(ymin = lower,
ymax = upper),
width = 1) +
geom_point() +
theme_bw() +
labs(x = "Number of Participants",
y = "Power for the Interaction")
ggsave(filename = "fig_power_less.tiff",
width = 6,
height = 4,
units = "in",
dpi = 600)
fit_final <- lmerTest::lmer(Ratio ~ SSRT_Gc*Leg + Delay +(1|id),
data = df ,
REML = TRUE)
anova(fit_final)
texreg::knitreg(fit_final,
custom.model.names = "Muscle Response Ratio",
custom.coef.map = list("(Intercept)" = "Intercept (Stance Leg, mean SSRT)",
"SSRT_Gc" = "SSRT, ms",
"LegStance Leg" = "Leg, Stance vs. Step",
"SSRT_Gc:LegStance Leg" = "SSRT x Leg"),
groups = list("Main Effects" = 2:3,
"Interaction" = 4),
single.row = TRUE,
caption = "Parameter Estimates of a Multilevel Model for Muscle Response Ratio, Including the Interaction Between Leg and Stop Signal Reaction Time (SSRT)",
caption.above = TRUE,
float.pos = "hb",
digits = 4,
bold = TRUE)
fit_final <- lmerTest::lmer(Ratio ~ SSRT_Gc*Leg + (1|id),
data = df ,
REML = TRUE)
fit_final_delay <- lmerTest::lmer(Ratio ~ SSRT_Gc*Leg + Delay + (1|id),
data = df ,
REML = TRUE)
texreg::knitreg(list(fit_final, fit_final_delay))
texreg::knitreg(list(fit_final, fit_final_delay),
single.row = TRUE)
texreg::knitreg(list(fit_final, fit_final_delay),
single.row = TRUE,
digits = 4)
anova(fit_final, fit_final_delay)
texreg::knitreg(list(fit_final, fit_final_delay),
custom.model.names = c("Final Model", "Including Delay")
single.row = TRUE,
texreg::knitreg(list(fit_final, fit_final_delay),
custom.model.names = c("Final Model", "Including Delay"),
single.row = TRUE,
caption = "Parameter Estimates of a Multilevel Model for Muscle Response Ratio, Including the Interaction Between Leg and Stop Signal Reaction Time (SSRT) - Both the Final Model and Including Delay",
caption.above = TRUE,
float.pos = "hb",
digits = 4,
bold = TRUE)
summary(fit_final)
summary(fit_final_delay)
ranova(fit_final_delay)
anova(fit_final)
performance::r2_nakagawa(fit_final)
?performance::r2_nakagawa
performance::r2_nakagawa(fit_final, by_group = TRUE)
?rsquared.glmm()
r2glmm::r2beta(model  = fit_final,
method = "kr")
r2glmm::r2beta(model  = fit_final,
method = "nsj")
r2glmm::r2beta(model  = fit_final_delay,
method = "nsj")
ss <- interactions::sim_slopes(model  = fit_final,
pred   = SSRT_Gc,
modx   = Leg,
digits = 4)
ss
effects::Effect(focal.predictors = c("Leg", "SSRT_Gc"),
mod     = fit_final,
xlevels = list(SSRT = seq(from = min(df$SSRT_Gc),
to   = max(df$SSRT_Gc),
by   = .1))) %>%
data.frame() %>%
dplyr::mutate(SSRT = SSRT_Gc + 193.205) %>%
ggplot(aes(x = SSRT,
y = fit)) +
geom_hline(yintercept = 1,
alpha = .4) +
# geom_ribbon(aes(group = Leg,
#                 ymin = lower, # 95% CI
#                 ymax = upper),
#             alpha = .2) +
geom_ribbon(aes(group = Leg,
ymin = fit - se, # plus/minus 1xSEM
ymax = fit + se),
alpha = .2) +
geom_line(aes(linetype = Leg)) +
theme_bw() +
labs(y = "Estimated Marginal Mean\nMuscle Response Ratio, Mean EMG REACH/STEP",
x = "Stop Signal Reaction Time (SSRT), ms",
linetype = NULL) +
theme(legend.position = "none")  +
geom_text(data = ss$slopes %>%
dplyr::rename("Leg" = "Value of Leg") %>%
dplyr::mutate(stars = add_stars(p)) %>%
dplyr::mutate(text  = paste0(Leg,
"\nb = ",
round(Est., 4),
", p = ",
round(p, 3) %>% str_sub(2),
stars)) %>%
dplyr::mutate(SSRT = case_when(Leg == "Stance Leg" ~ 222,
Leg == "Step Leg"   ~ 201),
fit  = case_when(Leg == "Stance Leg" ~ 0.7,
Leg == "Step Leg"   ~ 1.15)),
aes(label = text)) +
scale_x_continuous(breaks = seq(from = 140, to = 240, by = 20)) +
scale_linetype_manual(values = c("solid", "longdash"))
setwd("~/GitHub/PSY-6600_public/slides")
