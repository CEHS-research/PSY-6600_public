aov_hr_post <- ihno_clean %>%
afex::aov_4(hr_post ~ exp_condF + (1|sub_num),
data = .)
# set global chunk options...
#  this changes the defaults so you don't have to repeat yourself
knitr::opts_chunk$set(comment     = NA,
cache       = TRUE,
echo        = TRUE,
warning     = FALSE,
message     = FALSE,
fig.align   = "center", # center all figures
fig.width   = 5,        # set default figure width to 5 inches
fig.height  = 3)        # set default figure height to 3 inches
library(tidyverse)    # Loads several very helpful 'tidy' packages
library(readxl)       # Read in Excel datasets
library(furniture)    # Nice tables (by our own Tyson Barrett)
library(afex)         # Analysis of Factorial Experiments
library(emmeans)      # Estimated marginal means (Least-squares means)
library(multcomp)     # Simultaneous Inference in General Parametric Models
ihno_clean <- read_excel("Ihno_dataset.xls") %>%
dplyr::rename_all(tolower) %>%
dplyr::mutate(genderF = factor(gender,
levels = c(1, 2),
labels = c("Female",
"Male"))) %>%
dplyr::mutate(majorF = factor(major,
levels = c(1, 2, 3, 4,5),
labels = c("Psychology",
"Premed",
"Biology",
"Sociology",
"Economics"))) %>%
dplyr::mutate(reasonF = factor(reason,
levels = c(1, 2, 3),
labels = c("Program requirement",
"Personal interest",
"Advisor recommendation"))) %>%
dplyr::mutate(exp_condF = factor(exp_cond,
levels = c(1, 2, 3, 4),
labels = c("Easy",
"Moderate",
"Difficult",
"Impossible"))) %>%
dplyr::mutate(coffeeF = factor(coffee,
levels = c(0, 1),
labels = c("Not a regular coffee drinker",
"Regularly drinks coffee")))  %>%
dplyr::mutate(hr_base_bps = hr_base / 60)
aov_hr_post <- ihno_clean %>%
afex::aov_4(hr_post ~ exp_condF + (1|sub_num),
data = .)
aov_hr_post
summary(aov_hr_post)
aov_hr_post$Anova
ihno_clean %>%
ggplot(aes(x = exp_condF,
y = hr_post)) +
stat_summary()
# Pairwise post hoc: Tukey's HSD adjustment for multiple comparisons
aov_hr_post
# Pairwise post hoc: Tukey's HSD adjustment for multiple comparisons
aov_hr_post %>%
emmeans::emmeans()
# Pairwise post hoc: Tukey's HSD adjustment for multiple comparisons
aov_hr_post %>%
emmeans::emmeans(~ exp_condF)
# Pairwise post hoc: Tukey's HSD adjustment for multiple comparisons
aov_hr_post %>%
emmeans::emmeans(~ exp_condF) %>%
pairs(adjust = "tukey")
# Pairwise post hoc: Fisher's LSD adjustment for multiple comparisons
aov_hr_post %>%
emmeans::emmeans(~ exp_condF) %>%
pairs(adjust = "none")
# Pairwise post hoc: Tukey's HSD adjustment for multiple comparisons
aov_hr_post %>%
emmeans::emmeans(~ exp_condF) %>%
pairs(adjust = "tukey")
# Contrast statement : Impossible vs. Rest
aov_hr_post %>%
emmeans::emmeans(~ exp_condF) %>%
emmeans::contrast()
# Contrast statement : Impossible vs. Rest
aov_hr_post %>%
emmeans::emmeans(~ exp_condF) %>%
emmeans::contrast("imposible vs. rest" = c(1, 1, 1, -3))
# Contrast statement : Impossible vs. Rest
aov_hr_post %>%
emmeans::emmeans(~ exp_condF) %>%
emmeans::contrast(list("imposible vs. rest" = c(1, 1, 1, -3)))
# One-way ANOVA: fit and save
aov_math_major <- ihno_clean %>%
afex::aov_4(mathquiz ~ majorF + (1|sub_num),
data = .)
aov_math_major$Anova
aov_math_major
aov_hr_post
aov_hr_post %>% print(digits = 4)
aov_hr_post %>%
aov_hr_post
aov_hr_post
# One-way ANOVA: fit and save
aov_math_major <- ihno_clean %>%
afex::aov_4(mathquiz ~ majorF + (1|sub_num),
data = .)
aov_math_major
# Pairwise post hoc: Tukey's HSD adjustment for multiple comparisons
aov_math_major %>%
# Pairwise post hoc: Tukey's HSD adjustment for multiple comparisons
aov_math_major %>%
emmeans::emmeans(~ majorF)
# Pairwise post hoc: Tukey's HSD adjustment for multiple comparisons
aov_math_major %>%
emmeans::emmeans(~ majorF) %>%
pairs(adjust = "bon")
# Pairwise post hoc: Bonferroni adjustment for multiple comparisons
aov_math_major %>%
emmeans::emmeans(~ majorF) %>%
pairs(adjust = "bon")
# Contrast statement: Bio and Soc vs. rest
aov_math_major %>%
emmeans::emmeans(~ majorF)
# Contrast statement: Bio and Soc vs. rest
aov_math_major %>%
emmeans::emmeans(~ majorF) %>%
contrast(list("Bio & Soc vs. Rest" = c(2, 2, -3, -3, 2)))
# One-way ANOVA: fit and save
aov_anx_phob <- ihno_clean %>%
afex::aov_4(any_pre ~ phob_group + (1|sub_num),
data = .)
# One-way ANOVA: fit and save
aov_anx_phob <- ihno_clean %>%
afex::aov_4(anx_pre ~ phob_group + (1|sub_num),
data = .)
ihno_clean
ihno_clean %>% names
ihno_clean <- read_excel("Ihno_dataset.xls") %>%
dplyr::rename_all(tolower) %>%
dplyr::mutate(genderF = factor(gender,
levels = c(1, 2),
labels = c("Female",
"Male"))) %>%
dplyr::mutate(majorF = factor(major,
levels = c(1, 2, 3, 4,5),
labels = c("Psychology",
"Premed",
"Biology",
"Sociology",
"Economics"))) %>%
dplyr::mutate(reasonF = factor(reason,
levels = c(1, 2, 3),
labels = c("Program requirement",
"Personal interest",
"Advisor recommendation"))) %>%
dplyr::mutate(exp_condF = factor(exp_cond,
levels = c(1, 2, 3, 4),
labels = c("Easy",
"Moderate",
"Difficult",
"Impossible"))) %>%
dplyr::mutate(coffeeF = factor(coffee,
levels = c(0, 1),
labels = c("Not a regular coffee drinker",
"Regularly drinks coffee")))  %>%
dplyr::mutate(hr_base_bps = hr_base / 60) %>%
dplyr::mutate(phob_group = case_when(phobia <3            ~ 1,
phobia %in% c(3, 4)  ~ 2,
phobia >= 5          ~ 3)) %>%
dplyr::mutate(phob_group = factor(phob_group,
levels = c(1, 2, 3),
labels = c("Low", "Moderate", "High"))) %>%
dplyr::mutate(hr_diff = hr_pre - hr_base)
# One-way ANOVA: fit and save
aov_anx_phob <- ihno_clean %>%
afex::aov_4(anx_pre ~ phob_group + (1|sub_num),
data = .)
aov_anx_phob
# Pairwise post hoc: Fisher's LSD adjustment for multiple comparisons
aov_anx_phob %>%
emmeans::emmeans(~ phob_group)
# Pairwise post hoc: Fisher's LSD adjustment for multiple comparisons
aov_anx_phob %>%
emmeans::emmeans(~ phob_group) %>%
paris(adjust = "bon")
# Pairwise post hoc: Fisher's LSD adjustment for multiple comparisons
aov_anx_phob %>%
emmeans::emmeans(~ phob_group) %>%
pairs(adjust = "bon")
# Pairwise post hoc: Fisher's LSD adjustment for multiple comparisons
aov_anx_phob %>%
emmeans::emmeans(~ phob_group) %>%
pairs(adjust = "none")
# Pairwise post hoc: Bonferroni adjustment for multiple comparisons
aov_anx_phob %>%
emmeans::emmeans(~ phob_group) %>%
pairs(adjust = "bon")
contrast(list("low-mod vs. high" = c(1, 2, -3))
# Contrast statement: high vs. rest
aov_anx_phob %>%
emmeans::emmeans(~ phob_group) %>%
)
# Contrast statement: high vs. rest
aov_anx_phob %>%
emmeans::emmeans(~ phob_group) %>%
contrast(list("low-mod vs. high" = c(1, 2, -3))
aov_anx_phob %>%
emmeans::emmeans(~ phob_group)
contrast(list("low-mod vs. high" = c(1, 1, -2))
)
# Contrast statement: high vs. rest
aov_anx_phob %>%
emmeans::emmeans(~ phob_group) %>%
contrast(list("low-mod vs. high" = c(1, 1, -2))
aov_anx_phob %>%
emmeans::emmeans(~ phob_group)
# Contrast statement: high vs. rest
aov_anx_phob %>%
emmeans::emmeans(~ phob_group) %>%
contrast(list("low-mod vs. high" = c(1, 1, -2)))
# Pairwise post hoc: Tukey's HSD adjustment for multiple comparisons
aov_math_major %>%
emmeans::emmeans(~ majorF) %>%
pairs(adjust = "tukey")
# Contrast statement: Bio and Soc vs. rest
aov_math_major %>%
emmeans::emmeans(~ majorF) %>%
contrast(list("Bio & Soc vs. Rest" = c(2, 2, -3, -3, 2)))
aov_math_major %>%
emmeans::emmeans(~ majorF)
# Contrast statement: Bio and Soc vs. rest
aov_math_major %>%
emmeans::emmeans(~ majorF) %>%
contrast(list("Bio-Soc vs. Rest" = c(2, 2, -3, -3, 2)))
# Contrast statement: Bio and Soc vs. rest
ihno_clean %>%
afex::aov_4(statquiz ~ majorF + (1|sub_num),
data = .) %>%
emmeans::emmeans(~ majorF) %>%
contrast(list("Bio-Soc vs. Rest" = c(2, 2, -3, -3, 2)))
2.45**2
2.445**2
library(tidyverse)
library(furniture)
library(afex)
library(emmeans)
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))
df
df_wide <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))
df_wide
df_long <- df_wide %>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized")
df_long
df_long %>%
car::leveneTest(memorized ~ music,
data = .,
center = "mean")
df<- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized")
df_long
df<- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized")
df
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_prefix = list(music = factor()))
df
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_prefix = list(music = factor)
df
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_prefix = list(music = "factor")
df
names_ptype = list(music = "actor)
names_ptype = list(music = factor())
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_ptype = list(music = factor())
df
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_ptype = list(music = factor()))
df
df %>%
group_by(music) %>%
furniture::table1(memorized)
df %>%
ggplot(aes(x = music,
y = memorized)) +
geom_boxplot()
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_ptype = list(music = factor())) %>%
dplyr::mutate(id = row_number())
df
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_ptype = list(music = factor())) %>%
dplyr::mutate(id = row_number()) %>%
dplyr::select(id, music, memorized) %>%
dplyr::arrange(music)
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_ptype = list(music = factor())) %>%
dplyr::arrange(music) %>%
dplyr::mutate(id = row_number()) %>%
dplyr::select(id, music, memorized)
df
df_long %>%
car::leveneTest(memorized ~ music,
data = .,
center = "mean")
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_ptype = list(music = factor())) %>%
dplyr::arrange(music) %>%
dplyr::mutate(id = row_number()) %>%
dplyr::select(id, music, memorized)
df
df %>%
group_by(music) %>%
furniture::table1(memorized)
df %>%
ggplot(aes(x = music,
y = memorized)) +
geom_boxplot()
df_long %>%
car::leveneTest(memorized ~ music,
data = .,
center = "mean")
df <- data.frame(None = c(8, 10, 9, 10, 9),
Classical = c(7, 8, 5, 8, 5),
Rock = c(4, 8, 7, 5, 7))%>%
tidyr::pivot_longer(cols = c(None, Classical, Rock),
names_to = "music",
values_to = "memorized",
names_ptype = list(music = factor())) %>%
dplyr::arrange(music) %>%
dplyr::mutate(id = row_number() %>% factor()) %>%
dplyr::select(id, music, memorized)
df
df_long %>%
car::leveneTest(memorized ~ music,
data = .,
center = "mean")
df %>%
car::leveneTest(memorized ~ music,
data = .,
center = "mean")
df %>%
afex::aov_4(memorized ~ music + (1|id),
data = .)
fit_aov <- df %>%
afex::aov_4(memorized ~ music + (1|id),
data = .)
fit_aov <- df %>%
afex::aov_4(memorized ~ music + (1|id),
data = .)
fit_aov$Anova
fit_aov %>%
emmeans::emmeans(~ music)
fit_aov %>%
emmeans::emmeans(~ music) %>%
pairs(adjust = "none")
fit_aov %>%
emmeans::emmeans(~ music) %>%
pairs(adjust = "tukey")
fit_aov %>%
emmeans::emmeans(~ music) %>%
pairs(adjust = "bon")
fit_aov %>%
emmeans::emmeans(~ music) %>%
contrast(list("1. None vs. Some" = c(2, -1, -1)))
fit_aov %>%
emmeans::emmeans(~ music) %>%
contrast(list("1. None vs. Some"    = c(2, -1, -1),
"2. Classic vs. Rock" = c(0, 1, -1)))
?contrast
fit_aov %>%
emmeans::emmeans(~ music) %>%
contrast(list("1. None vs. Some"    = c(2, -1, -1),
"2. Classic vs. Rock" = c(0,  1, -1)),
adjust = "bon")
fit_aov %>%
emmeans::emmeans(~ music) %>%
contrast(list("1. None vs. Some"    = c(2, -1, -1),
"2. Classic vs. Rock" = c(0,  1, -1)),
adjust = "sche")
fit_aov %>%
emmeans::emmeans(~ music) %>%
contrast(list("1. None vs. Some"    = c(2, -1, -1),
"2. Classic vs. Rock" = c(0,  1, -1)),
adjust = "scheffe")
